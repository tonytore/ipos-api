// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum CustomerType {
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model Customer {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  customerType   CustomerType
  firstName      String
  lastName       String
  phone          String       @unique
  gender         Gender
  country        String
  location       String
  maxCreditLimit Float
  maxCreditDays  Int
  taxPin         String?
  dob            DateTime?
  email          String?      @unique
  NIN            String?      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SupplierType {
  MANUFACTURER
  DISTRIBUTOR
  WHOLESALER
  RETAILER
  OTHER
}

model Supplier {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  supplierType      SupplierType
  name              String
  contactPerson     String
  phone             String       @unique
  email             String?      @unique
  location          String
  country           String
  website           String?
  taxPin            String?
  regNumber         String?      @unique
  bankAccountNumber String?
  bankName          String?
  paymentTerms      String?
  logo              String?      @default("https://utfs.io/f/cedbb143-0c78-4714-8b70-cac825d533e0-9jz08y.png")
  rating            Float?
  notes             String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shop {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String @unique
  location String

  adminId String @db.ObjectId
  admin   User   @relation(fields: [adminId], references: [id])

  attendantId String[] @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  firstname String
  lastname  String
  email     String    @unique
  password  String
  phone     String    @unique
  dob       DateTime?
  gender    Gender
  image     String?
  role      Role      @default(ATTENDANT)

  shops Shop[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  ATTENDANT
}
