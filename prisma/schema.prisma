// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum CustomerType {
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model Customer {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  customerType       CustomerType
  firstName          String
  lastName           String
  phone              String       @unique
  gender             Gender
  country            String
  location           String
  maxCreditLimit     Float
  maxCreditDays      Int
  unpaidCreditAmount Int?         @default(0)
  taxPin             String?
  dob                DateTime?
  email              String?      @unique
  NIN                String?      @unique

  sales     Sale[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SupplierType {
  MANUFACTURER
  DISTRIBUTOR
  WHOLESALER
  RETAILER
  OTHER
}

model Supplier {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  supplierType      SupplierType
  name              String
  contactPerson     String
  phone             String       @unique
  email             String?      @unique
  location          String
  country           String
  website           String?
  taxPin            String?
  regNumber         String?      @unique
  bankAccountNumber String?
  bankName          String?
  paymentTerms      String?
  logo              String?      @default("https://utfs.io/f/cedbb143-0c78-4714-8b70-cac825d533e0-9jz08y.png")
  rating            Float?
  notes             String?

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shop {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String @unique
  location String

  adminId String @db.ObjectId
  admin   User   @relation(fields: [adminId], references: [id])

  attendantId String[]  @db.ObjectId
  products    Product[]
  sales     Sale[]
  expenses Expense[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  firstname String
  lastname  String
  email     String    @unique
  password  String
  phone     String    @unique
  dob       DateTime?
  gender    Gender
  image     String?
  role      Role      @default(ATTENDANT)

  resetToken  String?
  resetTokenExpiry DateTime?
  newPassword String?


  shops Shop[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  ATTENDANT
}

model Unit {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  abbreviation String
  slug         String    @unique
  products     Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String?
  batchNumber    String?
  barCode        String?   @unique
  image          String?
  tax            Int?
  alertQty       Int
  stockQty       Int
  price          Int
  wholesalePrice Int       @default(0)
  buyingPrice    Int?
  sku            String    @unique
  productCode    String    @unique
  slug           String    @unique
  supplierId     String    @db.ObjectId
  unitId         String    @db.ObjectId
  shopId         String    @default("66daef2b3655abee9186e1c8") @db.ObjectId
  brandId        String    @db.ObjectId
  categoryId     String    @db.ObjectId
  expiryDate     DateTime? @default("2025-12-31T23:59:59Z")
  shop           Shop      @relation(fields: [shopId], references: [id])
  unit           Unit      @relation(fields: [unitId], references: [id])
  brand          Brand     @relation(fields: [brandId], references: [id])
  category       Category  @relation(fields: [categoryId], references: [id])
  supplier       Supplier  @relation(fields: [supplierId], references: [id])

  saleItems SaleItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleItem {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  saleId        String  @db.ObjectId
  productId     String  @db.ObjectId
  qty           Int
  ProductPrice     Float
  productName   String
  productImage  String?


  product Product @relation(fields: [productId], references: [id])
  sale    Sale    @relation(fields: [saleId], references: id)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

 enum SaleType {
    PAID
    CREDIT
  }
  
 enum paymentMethod {
    CASH
    CREDIT
    MOBILEMONEY
  }

model Sale {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  customerId   String  @db.ObjectId
  customerName String?
  customerEmail   String?
  paymentMethod   paymentMethod @default(CASH)
  saleNumber     String   @unique
  saleAmount    Int
  saleType        SaleType @default(PAID)
  balanceAmount   Int?     @default(0)
  paidAmount      Int
  transactionCode String?
  
  shopId String @db.ObjectId
  shop    Shop    @relation(fields: [shopId], references: id)
  SaleItems SaleItem[]
  customer  Customer   @relation(fields: [customerId], references: id)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExpenseCategory {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String    @unique
  expenses Expense[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payee {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  phone     String    @unique
  expenses Expense[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title        String 
  amount      Int
  description String?
  attachments String[]
  expenseDate DateTime @default(now())
  payeeId     String  @db.ObjectId
  categoryId     String  @db.ObjectId
  shopId String @db.ObjectId


  category ExpenseCategory @relation(fields: [categoryId], references: [id])
  payee    Payee    @relation(fields: [payeeId], references: id)
  shop    Shop    @relation(fields: [shopId], references: id)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}